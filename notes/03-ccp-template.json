{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "workspace": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "resources": [
    {
      "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',guid(resourceGroup().id, deployment().name))]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',guid(resourceGroup().id, deployment().name))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "kind": "APIPolling",
      "properties": {
        "connectorUiConfig": {
          "title": "My AE",
          "publisher": "Preliator",
          "descriptionMarkdown": "Getting logs from my audit service",
          "graphQueriesTableName": "MyAE_CL",
          "graphQueries": [
            {
              "metricName": "Total audit events",
              "legend": "MyAE_CL",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "One-line title for your sample query 1",
              "query": "MyAE_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}| summarize Time = max(TimeGenerated) | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "SentinelKindsV2",
              "value": [
                "APIPolling"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true,
                  "write": true,
                  "read": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Include custom pre-requisites if the connectivity requires like API key etc. info - else delete customs",
                "description": "Description for any custom pre-requisite with link to docuemntation on how to get this pre-requisite fulfilled."
              }
            ]
          },
          "instructionSteps": [
            {
              "title": "1. Enter API Key\n 2. Getting data\n ",
              "description": "Define Api key for servives",
              "instructions": [
                {
                  "parameters": {
                    "enable": "true"
                  },
                  "type": "Input type for e.g. APIKey"
                }
              ]
            }
          ]
        },
        "pollingConfig": {
          "owner": "ASI",
          "version": "2.0",
          "source": "PaaS",
          "auth": {
            "authType": "APIKey",
            "APIKeyName": "X-Api-Key",
            "IsAPIKeyInPostPayload": false
          },
          "request": {
            "apiEndpoint": "https://ca-web-api.azurewebsites.net/ca-events/get/10",
            "rateLimitQPS": 2,
            "httpMethod": "Get",          
            "retryCount": 3,
            "queryWindowInMin": 10,
            "timeoutInSeconds": 120,            
            "isPostPayloadJson": false
          },
          "response": {            
            "successStatusValue": "OK",
            "convertChildPropertiesToArray": false
          },
          "paging": {
            "pagingType": "NextPageToken",
            "nextPageParaName": "next",
            "nextPageTokenJsonPath": "$.next"
          }
        }
      }
    }
  ]
}